name: Detect Changed Folders

on:
  workflow_call:
    outputs:
      matrix:
        description: "Matrix of changed folders"
        value: ${{ jobs.detect.outputs.matrix }}
      hasChanges:
        description: "Whether any relevant folder changed"
        value: ${{ jobs.detect.outputs.hasChanges }}

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      hasChanges: ${{ steps.set-matrix.outputs.hasChanges }}

    steps:
      - uses: actions/checkout@v4

      - id: filter
        uses: dorny/paths-filter@v3
        with:
          base: dev
          filters: |
            android-kotlin: android-kotlin/**
            spring-backend: spring-backend/**
            llm-backend: llm-backend/**
            next-frontend: next-frontend/**

      - id: set-matrix
        env:
          FILTER_ANDROID_KOTLIN: ${{ steps.filter.outputs.android-kotlin }}
          FILTER_SPRING_BACKEND: ${{ steps.filter.outputs.spring-backend }}
          FILTER_LLM_BACKEND: ${{ steps.filter.outputs.llm-backend }}
          FILTER_NEXT_FRONTEND: ${{ steps.filter.outputs.next-frontend }}
        run: |
          folders=()

          # --- Hardcoded test values (comment/uncomment to use) ---
          if [[ "true" == "true" ]]; then folders+=("next-frontend"); fi
          if [[ "true" == "true" ]]; then folders+=("spring-backend"); fi
          if [[ "true" == "true" ]]; then folders+=("android-kotlin"); fi
          if [[ "true" == "true" ]]; then folders+=("llm-backend"); fi

          # --- Dynamic detection from paths-filter outputs ---
          # declare -A envMap=(
          #   ["android-kotlin"]=$FILTER_ANDROID_KOTLIN
          #   ["spring-backend"]=$FILTER_SPRING_BACKEND
          #   ["llm-backend"]=$FILTER_LLM_BACKEND
          #   ["next-frontend"]=$FILTER_NEXT_FRONTEND
          # )

          # for folder in "${!envMap[@]}"; do
          #   if [[ "${envMap[$folder]}" == "true" ]]; then
          #     folders+=("$folder")
          #   fi
          # done

          if [ ${#folders[@]} -eq 0 ]; then
            echo "matrix=[]" >> $GITHUB_OUTPUT
            echo "hasChanges=false" >> $GITHUB_OUTPUT
          else
            # matrix_json=$(printf '%s\n' "${folders[@]}" | jq -R . | jq -s '[.[] | {folder: .}]')
            matrix_json=$(printf '%s\n' "${folders[@]}" | jq -R . | jq -s '{folder: .}')
            echo "matrix<<EOF" >> $GITHUB_OUTPUT
            echo "$matrix_json" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT

            echo "hasChanges=true" >> $GITHUB_OUTPUT
          fi
