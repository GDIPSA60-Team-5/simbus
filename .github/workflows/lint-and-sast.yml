name: Lint and SAST

on:
  workflow_call:
    inputs:
      folder:
        required: true
        type: string

jobs:
  validate:
    runs-on: ubuntu-latest
    outputs:
      folder: ${{ steps.validate.outputs.folder }}
    steps:
      - name: ✅ Validate Folder
        id: validate
        run: |
          case "${{ inputs.folder }}" in
            next-frontend|spring-backend|android-kotlin|llm-backend)
              echo "folder=${{ inputs.folder }}" >> "$GITHUB_OUTPUT"
              ;;
            *)
              echo "Invalid folder: ${{ inputs.folder }}"
              exit 1
              ;;
          esac

  next-frontend:
    if: needs.validate.outputs.folder == 'next-frontend'
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: ♻️ Cache Node Modules
        uses: actions/cache@v4
        with:
          path: next-frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('next-frontend/package-lock.json') }}

      - name: 🧹 Run ESLint
        run: |
          cd next-frontend
          npm ci
          npx next lint --format=json --output-file=eslint-report.json

      - name: 📤 Upload ESLint Report
        uses: actions/upload-artifact@v4
        with:
          name: eslint-report
          path: next-frontend/eslint-report.json

  spring-backend:
    if: needs.validate.outputs.folder == 'spring-backend'
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: ☕ Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      - name: 🛡️ Run SpotBugs & PMD
        run: |
          cd spring-backend
          chmod +x ./mvnw
          ./mvnw clean verify spotbugs:check pmd:check -DskipTests
        continue-on-error: true

      - name: 📤 Upload PMD Report
        uses: actions/upload-artifact@v4
        with:
          name: pmd-report
          path: spring-backend/target/pmd.xml

      - name: 📤 Upload SpotBugs Report
        uses: actions/upload-artifact@v4
        with:
          name: spotbugs-report
          path: spring-backend/target/spotbugsXml.xml

  android-kotlin:
    if: needs.validate.outputs.folder == 'android-kotlin'
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: ☕ Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: 🧹 Run ktlint
        run: |
          cd android-kotlin
          chmod +x ./gradlew
          ./gradlew ktlintCheck -PreportOutput=ktlint-report.xml || true

      - name: 📤 Upload ktlint Report
        uses: actions/upload-artifact@v4
        with:
          name: ktlint-report
          path: android-kotlin/build/reports/ktlint/ktlint.xml

      - name: 🔍 Run detekt
        run: |
          cd android-kotlin
          chmod +x ./gradlew
          ./gradlew detekt || true

      - name: 📤 Upload detekt Report
        uses: actions/upload-artifact@v4
        with:
          name: detekt-report
          path: android-kotlin/build/reports/detekt/detekt.xml

  llm-backend:
    if: needs.validate.outputs.folder == 'llm-backend'
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x
          cache: pip

      - name: 🧪 Run Ruff & Bandit
        run: |
          cd llm-backend
          pip install -r requirements.txt bandit ruff
          ruff check . -- --format json --output ruff-report.json
          bandit -r . -f json -o bandit-report.json

      - name: 📤 Upload Ruff Report
        uses: actions/upload-artifact@v4
        with:
          name: ruff-report
          path: llm-backend/ruff-report.json

      - name: 📤 Upload Bandit Report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: llm-backend/bandit-report.json
