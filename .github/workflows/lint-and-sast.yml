name: Lint and SAST
on:
  workflow_call:
    inputs:
      folder:
        required: true
        type: string

jobs:
  lint-and-sast:
    runs-on: ubuntu-latest
    env:
      FOLDER: ${{ inputs.folder }}

    steps:
      - uses: actions/checkout@v4

      - name: Validate folder input
        run: |
          case "$FOLDER" in
            next-frontend|spring-backend|android-kotlin|llm-backend) ;;
            *) echo "Invalid folder: $FOLDER"; exit 1 ;;
          esac

      # Setup and run lint/static analysis by folder type
      - name: Setup Node.js
        if: env.FOLDER == 'next-frontend'
        uses: actions/setup-node@v3
        with:
          cache: npm

      - name: Setup Java (Spring & Android)
        if: env.FOLDER == 'spring-backend' || env.FOLDER == 'android-kotlin'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: ${{ env.FOLDER == 'spring-backend' && 'maven' || 'gradle' }}

      - name: Setup Python
        if: env.FOLDER == 'llm-backend'
        uses: actions/setup-python@v4
        with:
          python-version: 3.x
          cache: pip

      # Next.js frontend lint
      - name: Install & Run ESLint
        if: env.FOLDER == 'next-frontend'
        run: |
          cd $FOLDER
          npm ci
          npx next lint --format=json --output-file=eslint-report.json

      - name: Upload ESLint report
        if: env.FOLDER == 'next-frontend'
        uses: actions/upload-artifact@v4
        with:
          name: eslint-report
          path: ${{ inputs.folder }}/eslint-report.json

      # Spring backend analysis
      - name: Run Spring backend static analysis
        if: env.FOLDER == 'spring-backend'
        run: |
          cd $FOLDER
          ./mvnw clean verify spotbugs:check checkstyle:check pmd:check -DskipTests

      - name: Upload SpotBugs report
        if: env.FOLDER == 'spring-backend'
        uses: actions/upload-artifact@v4
        with:
          name: spotbugs-report
          path: ${{ inputs.folder }}/target/spotbugsXml.xml

      - name: Upload Checkstyle report
        if: env.FOLDER == 'spring-backend'
        uses: actions/upload-artifact@v4
        with:
          name: checkstyle-report
          path: ${{ inputs.folder }}/target/checkstyle-result.xml

      - name: Upload PMD report
        if: env.FOLDER == 'spring-backend'
        uses: actions/upload-artifact@v4
        with:
          name: pmd-report
          path: ${{ inputs.folder }}/target/pmd.xml

      # Android Kotlin lint & security
      - name: Run ktlint
        if: env.FOLDER == 'android-kotlin'
        run: |
          cd $FOLDER
          ./gradlew ktlintCheck -PreportOutput=ktlint-report.xml || true

      - name: Upload ktlint report
        if: env.FOLDER == 'android-kotlin'
        uses: actions/upload-artifact@v4
        with:
          name: ktlint-report
          path: ${{ inputs.folder }}/build/reports/ktlint/ktlint.xml

      - name: Run detekt
        if: env.FOLDER == 'android-kotlin'
        run: |
          cd $FOLDER
          ./gradlew detekt

      - name: Upload detekt report
        if: env.FOLDER == 'android-kotlin'
        uses: actions/upload-artifact@v4
        with:
          name: detekt-report
          path: ${{ inputs.folder }}/build/reports/detekt/detekt.xml

      # # LLM backend python lint & security
      # - name: Run Ruff and Bandit
      #   if: env.FOLDER == 'llm-backend'
      #   run: |
      #     cd $FOLDER
      #     pip install -r requirements.txt bandit ruff
      #     ruff check . --format json --output ruff-report.json
      #     bandit -r . -f json -o bandit-report.json || true

      # - name: Upload Ruff report
      #   if: env.FOLDER == 'llm-backend'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: ruff-report
      #     path: ${{ inputs.folder }}/ruff-report.json

      # - name: Upload Bandit report
      #   if: env.FOLDER == 'llm-backend'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: bandit-report
      #     path: ${{ inputs.folder }}/bandit-report.json
