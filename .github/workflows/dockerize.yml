name: Dockerize

on:
  workflow_call:
    inputs:
      image_tag:
        description: "Docker image tag"
        required: true
        type: string
      security_scan_enabled:
        description: "Enable security scanning with Trivy"
        required: false
        type: boolean
        default: true
      fail_on_high_severity:
        description: "Fail the workflow on high/critical vulnerabilities"
        required: false
        type: boolean
        default: true

    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
      GITHUB_TOKEN:
        required: true

# Updated permissions to allow writing to security events
permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  build_and_push_frontend:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ inputs.image_tag }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Frontend Image (for scanning)
        uses: docker/build-push-action@v5
        with:
          context: ./next-frontend
          push: false
          load: true
          tags: frontend:${{ env.IMAGE_TAG }}
          cache-from: type=gha

      - name: Run Trivy vulnerability scanner - Frontend
        if: ${{ inputs.security_scan_enabled }}
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: frontend:${{ env.IMAGE_TAG }}
          format: "sarif"
          output: "trivy-frontend-results.sarif"

      - name: Upload Trivy scan results to GitHub Security tab - Frontend
        if: ${{ inputs.security_scan_enabled && always() }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-frontend-results.sarif"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Trivy vulnerability scanner (Table) - Frontend
        if: ${{ inputs.security_scan_enabled }}
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: frontend:${{ env.IMAGE_TAG }}
          format: "table"
          exit-code: ${{ inputs.fail_on_high_severity && '1' || '0' }}
          severity: "CRITICAL,HIGH"

      - name: Run Trivy vulnerability scanner (JSON) - Frontend
        if: ${{ inputs.security_scan_enabled }}
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: frontend:${{ env.IMAGE_TAG }}
          format: "json"
          output: "trivy-frontend-results.json"

      - name: Upload Trivy security report - Frontend
        if: ${{ inputs.security_scan_enabled && always() }}
        uses: actions/upload-artifact@v4
        with:
          name: trivy-frontend-security-report
          path: trivy-frontend-results.json

      - name: Log in to DockerHub
        if: success() || !inputs.security_scan_enabled
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Frontend Image to Registry
        if: success() || !inputs.security_scan_enabled
        uses: docker/build-push-action@v5
        with:
          context: ./next-frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/frontend:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build_and_push_backend:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ inputs.image_tag }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Backend Image (for scanning)
        uses: docker/build-push-action@v5
        with:
          context: ./spring-backend
          push: false
          load: true
          tags: backend:${{ env.IMAGE_TAG }}
          cache-from: type=gha

      - name: Run Trivy vulnerability scanner - Backend
        if: ${{ inputs.security_scan_enabled }}
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: backend:${{ env.IMAGE_TAG }}
          format: "sarif"
          output: "trivy-backend-results.sarif"

      - name: Upload Trivy scan results to GitHub Security tab - Backend
        if: ${{ inputs.security_scan_enabled && always() }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-backend-results.sarif"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Trivy vulnerability scanner (Table) - Backend
        if: ${{ inputs.security_scan_enabled }}
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: backend:${{ env.IMAGE_TAG }}
          format: "table"
          exit-code: ${{ inputs.fail_on_high_severity && '1' || '0' }}
          severity: "CRITICAL,HIGH"

      - name: Run Trivy vulnerability scanner (JSON) - Backend
        if: ${{ inputs.security_scan_enabled }}
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: backend:${{ env.IMAGE_TAG }}
          format: "json"
          output: "trivy-backend-results.json"

      - name: Upload Trivy scan results as artifact - Backend
        if: ${{ inputs.security_scan_enabled && always() }}
        uses: actions/upload-artifact@v4
        with:
          name: trivy-backend-results
          path: |
            trivy-backend-results.sarif
            trivy-backend-results.json

      - name: Log in to DockerHub
        if: success() || !inputs.security_scan_enabled
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Backend Image to Registry
        if: success() || !inputs.security_scan_enabled
        uses: docker/build-push-action@v5
        with:
          context: ./spring-backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/backend:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  show_image_summary:
    runs-on: ubuntu-latest
    needs:
      - build_and_push_frontend
      - build_and_push_backend
    if: always()
    steps:
      - name: Show pushed image summary
        run: |
          echo "## Docker Images Built and Scanned" >> $GITHUB_STEP_SUMMARY
          echo "| Repository | Tag | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------------|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| ${{ secrets.DOCKER_USERNAME }}/frontend | ${{ inputs.image_tag }} | ✅ Built, Scanned & Pushed |" >> $GITHUB_STEP_SUMMARY
          echo "| ${{ secrets.DOCKER_USERNAME }}/backend | ${{ inputs.image_tag }} | ✅ Built, Scanned & Pushed |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🛡️ Security: Images were scanned before pushing to registry" >> $GITHUB_STEP_SUMMARY
          echo "📊 Security scan results are available in the Security tab and as workflow artifacts." >> $GITHUB_STEP_SUMMARY
