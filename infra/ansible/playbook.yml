- hosts: all
  become: yes
  vars:
    image_tag: "{{ lookup('env', 'IMAGE_TAG') }}"
    docker_username: "{{ lookup('env', 'DOCKER_USERNAME') }}"

  tasks:
    - name: Ensure Docker is installed
      apt:
        name: docker.io
        state: present
        update_cache: yes

    - name: Install Docker Compose CLI plugin
      become: yes
      shell: |
        mkdir -p /usr/local/lib/docker/cli-plugins
        curl -SL https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-linux-x86_64 -o /usr/local/lib/docker/cli-plugins/docker-compose
        chmod +x /usr/local/lib/docker/cli-plugins/docker-compose

    - name: Remove any old docker-compose.yml
      file:
        path: /home/ubuntu/docker-compose.yml
        state: absent

    - name: Copy templated docker-compose.yml
      template:
        src: docker-compose.yml.j2
        dest: /home/ubuntu/docker-compose.yml
        owner: ubuntu
        mode: "0644"

    - name: Show final docker-compose.yml content
      shell: cat /home/ubuntu/docker-compose.yml
      register: composed_file

    - name: Display docker-compose.yml content
      debug:
        var: composed_file.stdout_lines

    - name: Copy nginx.conf to EC2 server
      copy:
        src: files/nginx.conf
        dest: /home/ubuntu/nginx.conf
        owner: ubuntu
        mode: "0644"

    - name: Prune unused Docker data
      shell: docker system prune -af
      ignore_errors: yes

    - name: Pull latest images
      shell: docker compose pull
      args:
        chdir: /home/ubuntu

    - name: Start services
      shell: docker compose up -d
      args:
        chdir: /home/ubuntu

    - name: Show running Docker containers
      shell: docker ps
      register: running_containers

    - name: Display running containers
      debug:
        var: running_containers.stdout_lines
